name: QA Suite

on:
  # Manual trigger only
  workflow_dispatch:

jobs:
  qa-suite:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v5
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.SBS_DOCKER_USER }}
          password: ${{ secrets.SBS_DOCKER_PAT }}
      - name: Set Up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13.9'
          cache: 'pip'
      - name: Install Swirl
        run: ./install.sh
      - name: Setup Swirl
        run: python swirl.py setup
      - name: Install the Galaxy UI Preview
        run: ./install-ui.sh -p
        env:
          MSAL_CB_PORT: 8000
          MSAL_HOST: localhost
      - name: Start Swirl
        run: |
          echo "OPENAI_API_KEY='${{ secrets.QA_OPENAI_KEY }}'" >> .env
          cat .env
          python swirl.py start
        env:
          ALLOWED_HOSTS: localhost,host.docker.internal
      - name: PATCH the Web PSE Config
        env:
          JSON: ${{ secrets.QA_PSE_WEB }}
          API_ENDPOINT: http://localhost:8000/swirl/searchproviders/1/
          PASSWORD: ${{ secrets.QA_ADMIN_PW }}
        run: |
          sleep 15
          curl -X PATCH "$API_ENDPOINT" \
            -u admin:"$PASSWORD" \
            -H "Content-Type: application/json" \
            -d "$JSON"
      - name: PATCH the LinkedIn PSE Config
        env:
          JSON: ${{ secrets.QA_PSE_LINKEDIN }}
          API_ENDPOINT: http://localhost:8000/swirl/searchproviders/3/
          PASSWORD: ${{ secrets.QA_ADMIN_PW }}
        run: |
          curl -X PATCH "$API_ENDPOINT" \
            -u admin:"$PASSWORD" \
            -H "Content-Type: application/json" \
            -d "$JSON"
      - name: PATCH the SWIRL Docs PSE Config
        env:
          JSON: ${{ secrets.QA_PSE_DOCS }}
          API_ENDPOINT: http://localhost:8000/swirl/searchproviders/4/
          PASSWORD: ${{ secrets.QA_ADMIN_PW }}
        run: |
          curl -X PATCH "$API_ENDPOINT" \
            -u admin:"$PASSWORD" \
            -H "Content-Type: application/json" \
            -d "$JSON"
      - name: Decode BigQuery token and create JSON file
        run: |
          echo "$BIGQUERY_TOKEN_BASE64" | base64 --decode > "${{ github.workspace }}/token.json"
        env:
          BIGQUERY_TOKEN_BASE64: ${{ secrets.QA_BIGQUERY_TOKEN_BASE64 }}
      - name: Run the QA Suite
        run: |
          echo "SWIRL_TEST_HOST=localhost" > .env.qa
          echo "MSAL_HOST=localhost" >> .env.qa
          echo "MSAL_CB_PORT=8000" >> .env.qa
          echo "QA_ADMIN_PW=${{ secrets.QA_ADMIN_PW }}" >> .env.qa
          echo "QA_OPENAI_KEY=${{ secrets.QA_OPENAI_KEY }}" >> .env.qa
          echo "QA_NLR_USERNAME=${{ secrets.QA_NLR_USERNAME }}" >> .env.qa
          echo "QA_NLR_PASSWORD=${{ secrets.QA_NLR_PASSWORD }}" >> .env.qa
          echo "QA_CRUNCHBASE_KEY=${{ secrets.QA_CRUNCHBASE_KEY }}" >> .env.qa
          echo "QA_BLOCKCHAIN_KEY=${{ secrets.QA_BLOCKCHAIN_KEY }}" >> .env.qa
          echo "QA_YOUTRACK_TOKEN=${{ secrets.QA_YOUTRACK_TOKEN }}" >> .env.qa
          echo "QA_GITHUB_TOKEN=${{ secrets.QA_GITHUB_TOKEN }}" >> .env.qa
          echo "BIGQUERY_TOKEN_PATH=${{ github.workspace }}/token.json" >> .env.qa
          echo "QA_TRELLO_KEYS=${{ secrets.QA_TRELLO_KEYS }}" >> .env.qa
          echo "========"
          cat .env.qa
          echo "========"
          docker run --net=host --env-file .env.qa -t swirlai/swirl-search-qa:automated-tests-develop sh -c "behave --tags=qa_suite,community"
      - name: Upload Log Files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-files
          path: |
            logs/
            /var/log/syslog*
